from aiogram.types import CallbackQuery, Message, InputMediaPhoto
from aiogram.dispatcher import FSMContext

from loader import bot, vip
from data import blacklist_msg, user_black_msg, BlackList
from keyboards import (
    default_markup,
    blacklist_markup,
    cancel_markup,
    cancel_button,
    black_confirm_markup,
    return_markup,
    return_black_markup
)
from states import BlacklistChecker, WriteBlacklist
from utils import config


@vip.callback_query_handler(text='user-blacklist')
async def blacklist_handler(call: CallbackQuery):
    await call.message.edit_media(
        InputMediaPhoto(
            media=('https://telegra.ph/file/5cca1b9f425cdef886e16.png'),
            caption=blacklist_msg,
        ),
        reply_markup=blacklist_markup()
    )


@vip.callback_query_handler(text='blacklist-list')
async def list_handler(call: CallbackQuery):
    markup = await BlackList.getMarkup()
    if markup:
        await call.message.edit_caption(
            caption="<b>üõ° –ù–∏–∂–µ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö —Å–∫–∞–º–µ—Ä–æ–≤ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã:</b>",
            reply_markup=markup
        )
    else:
        await call.message.edit_caption(
            caption="<b>–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–∫–∞–º–µ—Ä–∞ –≤ –±–∞–∑–µ...</b>",
            reply_markup=return_markup()
        )


@vip.callback_query_handler(text_startswith="blacklist-page:")
async def scam_page_handler(call: CallbackQuery):
    markup = await BlackList.getMarkup(
        page_number=int(call.data.split(":")[1])
    )
    await call.message.edit_reply_markup(
        reply_markup=markup
    )


@vip.callback_query_handler(text_startswith='blacklist-scammer:')
async def scam_handler(call: CallbackQuery):
    black = await BlackList.get(id=call.data.split(":")[1])

    await call.message.edit_caption(
        caption=user_black_msg.format(
            username=black.username,
            user_id=black.user_id,
            amount=black.amount,
            desc=black.description,
            date=str(black.date)[:10]
        ),
        reply_markup=return_black_markup()
    )


@vip.callback_query_handler(text='blacklist-checker')
async def checker_handler(call: CallbackQuery):
    await BlacklistChecker.user.set()
    await call.message.answer(
        text="<b>–í–≤–µ–¥–∏—Ç–µ user_id –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:</b>\n"
             "*<i>–î–ª—è –æ—Ç–º–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>",
        reply_markup=cancel_markup()
    )


@vip.message_handler(state=BlacklistChecker.user)
async def check_handler(msg: Message, state: FSMContext):
    await state.finish()

    if msg.text != cancel_button[0]:
        if msg.text.isdigit():
            data = await BlackList.checkingUser(
                user_id=msg.text
            )
        else:
            data = await BlackList.checkingUser(
                username=msg.text
            )

        if data and data.status != "WAIT":
            await msg.answer(
                text=user_black_msg.format(
                    username=data.username,
                    user_id=data.user_id,
                    amount=data.amount,
                    desc=data.description,
                    date=str(data.date)[:10]
                ),
                reply_markup=default_markup()
            )
        else:
            await msg.answer(
                text="<b>‚úÖ –î–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–∏—Å—Ç. –£–¥–∞—á–Ω–æ–π —Å–¥–µ–ª–∫–∏!</b>",
                reply_markup=default_markup(),
            )
    else:
        await msg.answer(
            text="<b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É</b>",
            reply_markup=default_markup()
        )


@vip.callback_query_handler(text="blacklist-write")
async def writebl_handler(call: CallbackQuery) -> object:
    await WriteBlacklist.user_id.set()
    await call.message.answer(
        text="<b>–í–≤–µ–¥–∏—Ç–µ user_id —Å–∫–∞–º–µ—Ä–∞:</b>\n"
             "*<i>–î–ª—è –æ—Ç–º–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>",
        reply_markup=cancel_markup()
    )


@vip.message_handler(state=WriteBlacklist.user_id)
async def write_id_handler(msg: Message, state: FSMContext):
    if msg.text != cancel_button[0]:
        if msg.text.isdigit():
            await state.update_data(user_id=msg.text)
            await msg.answer(
                text="<b>–í–≤–µ–¥–∏—Ç–µ username —Å–∫–∞–º–µ—Ä–∞ (–±–µ–∑ @):</b>\n"
                     "*<i>–î–ª—è –æ—Ç–º–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>",
                reply_markup=cancel_markup()
            )
            await WriteBlacklist.next()
        else:
            await msg.reply(
                text="–í–≤–æ–¥–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ user id!\n –û–Ω–æ —á–∏—Å–ª–æ–≤–æ–µ, –µ—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É"
            )
    else:
        await msg.answer(
            text="<b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å</b>",
            reply_markup=default_markup()
        )
        await state.finish()


@vip.message_handler(state=WriteBlacklist.username)
async def write_username_handler(msg: Message, state: FSMContext):
    if msg.text != cancel_button[0]:
        await state.update_data(username=msg.text)
        await msg.answer(
            text="<b>–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —É—â–µ—Ä–±–∞ —Å–∫–∞–º–µ—Ä–∞ –≤ —Ä—É–±–ª—è—Ö:</b>\n"
                 "*<i>–î–ª—è –æ—Ç–º–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>",
        )
        await WriteBlacklist.next()
    else:
        await msg.answer(
            text="<b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å</b>",
            reply_markup=default_markup()
        )
        await state.finish()


@vip.message_handler(state=WriteBlacklist.amount)
async def write_id_handler(msg: Message, state: FSMContext):
    if msg.text != cancel_button[0]:
        try:
            if float(msg.text) > 0:
                await state.update_data(amount=msg.text)
                await msg.answer(
                    text="<b>–û–ø–∏—à–∏—Ç–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–∫–∞–º–∞, –º–æ–∂–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å –ø–æ–º–æ—â—å—é —Å—Å—ã–ª–∫–∏ imgur:</b>\n"
                         "*<i>–î–ª—è –æ—Ç–º–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>",
                )
                await WriteBlacklist.next()
            else:
                await msg.reply(
                    text="–°—É–º–º–∞ —É—â–µ—Ä–±–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0 –∏–ª–∏ –º–µ–Ω—å—à–µ, –µ—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É"
                )
        except ValueError:
            await msg.reply(
                text="–í–≤–æ–¥–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—É–º–º—É —É—â–µ—Ä–±–∞!\n –û–Ω–æ —á–∏—Å–ª–æ–≤–æ–µ, –µ—Å–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É"
            )
    else:
        await msg.answer(
            text="<b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å</b>",
            reply_markup=default_markup()
        )
        await state.finish()


@vip.message_handler(state=WriteBlacklist.desc)
async def write_id_handler(msg: Message, state: FSMContext):
    if msg.text != cancel_button[0]:
        data = await state.get_data()

        await msg.answer(
            text="<b>–ê–Ω–∫–µ—Ç–∞ —Å–∫–∞–º–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è.</b>",
            reply_markup=default_markup()
        )
        bl_id = await BlackList.writeUser(
            user_id=data['user_id'],
            username=data['username'],
            amount=data['amount'],
            desc=msg.text
        )

        await bot.send_message(
            chat_id=config.config("admin_group"),
            text=f"<b>ü¶† –ó–∞—è–≤–∫–∞ –Ω–∞ –±–ª–µ–∫–ª–∏—Å—Ç:</b>\n\n"
                 f"<b>üßëüèª‚Äçüíª –û—Ç –∫–æ–≥–æ:</b> {msg.from_user.get_mention()} | {msg.from_user.id}\n\n"
                 f"<b>üßëüèª‚Äçüíª –°–∫–∞–º–µ—Ä:</b> @{data['username']} | {data['user_id']}\n\n"
                 f"<b>üí≥ –°—É–º–º–∞ —É—â–µ—Ä–±–∞:</b> {data['amount']} RUB\n\n"
                 f"<b>üìú –û–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞:</b>\n {msg.text}\n\n"
                 f"<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:</i>",
            reply_markup=black_confirm_markup(bl_id=bl_id)
        )
    else:
        await msg.answer(
            text="<b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å</b>",
            reply_markup=default_markup()
        )
    await state.finish()
