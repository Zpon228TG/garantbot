from aiogram.types import CallbackQuery, InputMediaPhoto
from aiogram.dispatcher import FSMContext

from loader import vip, bot
from data import Users, deal_create_msg, group_deal_msg, refferal_msg, inform_msg, cabinet_msg, BlackList, Deals
from keyboards import (
    deals_markup,
    garant_markup,
    accept_deal_markup,
    pay_deal_markup,
    conditions_deal_markup,
    finish_deal_markup,
    finish_seller_markup,
    arbitrator_markup,
    rating_markup,
    view_markup,
    return_markup,
    information_markup,
    partners_markup,
    cabinet_markup
)
from states import SearchUser, OpenDeal
from utils import config


@vip.callback_query_handler(text_startswith="close-message")
async def close_handler(call: CallbackQuery):
    await call.message.delete()


@vip.callback_query_handler(text_startswith="return-menu:")
async def return_handler(call: CallbackQuery):
    if call.data.split(":")[1] == "default":
        await call.message.edit_media(
            InputMediaPhoto(media=('https://telegra.ph/file/c02319db76b95f2eab4de.png'), caption=''),
            reply_markup=garant_markup())
    elif call.data.split(":")[1] == "cabinet":
        user = await Users.get(user_id=call.from_user.id)
        await call.message.edit_media(
            InputMediaPhoto(
                media=('https://telegra.ph/file/ba585ea63559091e3ac24.png'),
                caption=cabinet_msg.format(
                    user_id=call.from_user.id,
                    login=call.from_user.get_mention(),
                    data=str(user.date)[:10],
                    deals=await Deals.getCountUserDeals(
                        user_id=call.from_user.id,
                        status="ALL"
                    ),
                    success=await Deals.getCountUserDeals(
                        user_id=call.from_user.id,
                        status="–ó–∞–∫—Ä—ã—Ç–∞"
                    ),
                    canceled=await Deals.getCountUserDeals(
                        user_id=call.from_user.id,
                        status="–û—Ç–º–µ–Ω–µ–Ω–∞"
                    ),
                    rating=user.rating,
                    balance=user.balance
                ),
            ),
            reply_markup=cabinet_markup()
        )
    elif call.data.split(":")[1] == "black":
        markup = await BlackList.getMarkup()
        if markup:
            await call.message.edit_caption(
                caption="<b>üõ° –ù–∏–∂–µ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö —Å–∫–∞–º–µ—Ä–æ–≤ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã:</b>",
                reply_markup=markup
            )
        else:
            await call.message.edit_caption(
                caption="<b>–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–∫–∞–º–µ—Ä–∞ –≤ –±–∞–∑–µ...</b>",
                reply_markup=return_markup()
            )

    else:
        await call.message.delete()


@vip.callback_query_handler(text="user-information")
async def inform_handler(call: CallbackQuery):
    await call.message.edit_media(
        InputMediaPhoto(
            media=('https://telegra.ph/file/5cca1b9f425cdef886e16.png'),
            caption=inform_msg,
        ),
        reply_markup=information_markup()

    )


# @vip.callback_query_handler(text="partners-bot")
# async def partners_bot_handler(call: CallbackQuery):
#     await call.message.edit_caption(
#         caption="<b>–ù–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã:</b>",
#         reply_markup=partners_markup()
#     )


@vip.callback_query_handler(text="user-parners")
async def parners_handler(call: CallbackQuery):
    await call.message.edit_media(
        InputMediaPhoto(
            media=('https://telegra.ph/file/3d4f38822820766cbedfd.png'),
            caption=refferal_msg.format(
                bot_login="CryptoGarantsBot",
                ref_code=call.from_user.id,
                ref_percent=config.config("ref_percent")
            ),
        ),
        reply_markup=return_markup()
    )


@vip.callback_query_handler(text="user-deals")
async def deals_handler(call: CallbackQuery):
    """–ú–û–ò –°–î–ï–õ–ö–ò"""
    await call.message.edit_media(
        InputMediaPhoto(
            media=('https://telegra.ph/file/f9f4c6dae6c4833ef495a.png'),
            caption=''
        ),
        reply_markup=deals_markup())


@vip.callback_query_handler(text_startswith="user-deals:")
async def user_deals_handler(call: CallbackQuery):
    markup = await Deals.getUserDealsMarkup(
        _type=call.data.split(":")[1],
        user_id=call.from_user.id
    )
    face = '–ü—Ä–æ–¥–∞–≤—Ü–∞' if call.data.split(':')[1] == 'seller' else '–ü–æ–∫—É–ø–∞—Ç–µ–ª—è'
    if markup:
        await call.message.edit_caption(
            caption=f"<b>ü§ù –í–æ—Ç –≤—Å–µ –≤–∞—à–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç –ª–∏—Ü–∞ {face}</b>",
            reply_markup=markup
        )
    else:
        await call.answer(
            text=f"–£ –≤–∞—Å –Ω–µ—Ç —Å–¥–µ–ª–æ–∫ –æ—Ç –ª–∏—Ü–∞ {face}",
            show_alert=True
        )


@vip.callback_query_handler(text="user-search-deal")
async def search_deal_handler(call: CallbackQuery):
    await SearchUser.username.set()
    await call.message.delete()
    await call.message.answer(
        text="<b>–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –±–µ–∑ @ (–≤–æ—Ç —Ç–∞–∫: username) –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>"
    )


@vip.callback_query_handler(text_startswith="user-open-deal:")
async def view_deal_handler(call: CallbackQuery, state: FSMContext):
    await OpenDeal.amount.set()
    async with state.proxy() as data:
        data['user_id'] = call.data.split(":")[1]

    await call.message.edit_text(
        text="<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏:</b>"
    )


@vip.callback_query_handler(text_startswith="view-deal:")
async def view_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    buyer = await Users.get(user_id=deal.buyer_id)
    seller = await Users.get(user_id=deal.seller_id)

    if deal.status == "–û—Ç–∫—Ä—ã—Ç–∞":
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞' if deal.buyer_id == call.from_user.id else "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ"
            ),
            reply_markup=None if deal.buyer_id == call.from_user.id else accept_deal_markup(deal.id)

        )
    elif deal.status == "–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã":
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status="–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã" if deal.buyer_id == call.from_user.id else '–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ'
            ),
            reply_markup=None if deal.buyer_id != call.from_user.id else pay_deal_markup(deal.id)

        )
    elif deal.status == "–û–ø–ª–∞—á–µ–Ω–∞":
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É —É—Å–ª—É–≥–∏/—Ç–æ–≤–∞—Ä–∞'
                if deal.buyer_id == call.from_user.id else "–û–ø–ª–∞—á–µ–Ω–∞, –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä/—É—Å–ª—É–≥—É"
            ),
            reply_markup=None if deal.buyer_id == call.from_user.id else conditions_deal_markup(deal.id)

        )
    elif deal.status == "–§–∏–Ω–∞–ª":
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã' + "\n\n‚ÄºÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞\—É—Å–ª—É–≥–∏, "
                                             "–∞ –ø–æ—Ç–æ–º —É–∂–µ –æ—Ç–ø—É—Å–∫–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –ø—Ä–æ–¥–∞–≤—Ü—É!"
                if deal.buyer_id == call.from_user.id else "–ó–∞–∫—Ä—ã—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è"
            ),
            reply_markup=finish_seller_markup(deal.id)
            if deal.buyer_id != call.from_user.id else finish_deal_markup(deal.id)

        )
    elif deal.status == "–ê—Ä–±–∏—Ç—Ä–∞–∂":
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ê—Ä–±–∏—Ç—Ä–∞–∂'
            ),
            reply_markup=arbitrator_markup()
        )
    else:
        await call.message.edit_caption(
            caption=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ó–∞–∫—Ä—ã—Ç–∞'
            )
        )


@vip.callback_query_handler(text_startswith="refurse-deal:")
async def refurse_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    await call.message.delete()

    await call.message.answer(
        text=f'<b>üåÄ –°–¥–µ–ª–∫–∞: #CG_{deal.id} –û—Ç–º–µ–Ω–µ–Ω–∞</b>'
    )
    await bot.send_message(
        chat_id=deal.buyer_id,
        text=f'<b>üåÄ –°–¥–µ–ª–∫–∞: #CG_{deal.id} –û—Ç–º–µ–Ω–µ–Ω–∞</b>'
    )
    await Deals.updateStatus(
        dl_id=call.data.split(":")[1],
        status="–û—Ç–º–µ–Ω–µ–Ω–∞"
    )


@vip.callback_query_handler(text_startswith="refund-deal:")
async def refund_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])

    if deal.status == "–û–ø–ª–∞—á–µ–Ω–∞":
        await Users.updateBalance(
            user_id=deal.buyer_id,
            amount=deal.amount
        )
        await Deals.updateStatus(
            dl_id=call.data.split(":")[1],
            status="–û—Ç–º–µ–Ω–µ–Ω–∞"
        )

        await call.message.delete()

        await bot.send_message(
            chat_id=config.config('group_id'),
            text=f'<b>üåÄ C–¥–µ–ª–∫–∞ #CG_{deal.id} –æ—Ç–º–µ–Ω–µ–Ω–∞!</b>'
        )
        await bot.send_message(
            chat_id=deal.buyer_id,
            text=f'<b>üåÄ C–¥–µ–ª–∫–∞ #CG_{deal.id} –æ—Ç–º–µ–Ω–µ–Ω–∞, –¥–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å!</b>'
        )
        await bot.send_message(
            chat_id=deal.seller_id,
            text=f'<b>üåÄ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–¥–µ–ª–∫—É #CG_{deal.id}, –¥–µ–Ω—å–≥–∏ –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</b>'
        )


@vip.callback_query_handler(text_startswith="accept-deal:")
async def accept_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    if deal.status == '–û—Ç–∫—Ä—ã—Ç–∞':
        buyer = await Users.get(user_id=deal.buyer_id)
        seller = await Users.get(user_id=deal.seller_id)

        await Deals.updateStatus(
            dl_id=call.data.split(":")[1],
            status="–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã"
        )

        await bot.send_message(
            chat_id=deal.buyer_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã'
            ),
            reply_markup=pay_deal_markup(deal.id))
        await bot.send_message(
            chat_id=deal.seller_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ'
            )
        )
        await call.message.delete()


@vip.callback_query_handler(text_startswith="pay-deal:")
async def pay_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    print(deal.status)

    if deal.status == '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã':
        buyer = await Users.get(user_id=deal.buyer_id)
        seller = await Users.get(user_id=deal.seller_id)

        balance = buyer.balance
        if float(balance) >= float(deal.amount):
            await Users.updateBalance(
                user_id=deal.buyer_id,
                amount=-float(deal.amount)
            )
            await Deals.updateStatus(
                dl_id=call.data.split(":")[1],
                status="–û–ø–ª–∞—á–µ–Ω–∞"
            )

            await bot.send_message(
                chat_id=config.config('group_id'),
                text=group_deal_msg.format(
                    id_deal=deal.id,
                    seller=seller.username,
                    buyer=buyer.username,
                    amount=deal.amount,
                    info='–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞'
                )
            )
            await bot.send_message(
                chat_id=deal.buyer_id,
                text=deal_create_msg.format(
                    id_deal=deal.id,
                    seller=seller.username,
                    buyer=buyer.username,
                    amount=deal.amount,
                    info=deal.description,
                    status='–û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É —É—Å–ª—É–≥–∏/—Ç–æ–≤–∞—Ä–∞')
            )
            await bot.send_message(
                chat_id=deal.seller_id,
                text=deal_create_msg.format(
                    id_deal=deal.id,
                    seller=seller.username,
                    buyer=buyer.username,
                    amount=deal.amount,
                    info=deal.description,
                    status='–û–ø–ª–∞—á–µ–Ω–∞, –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä/—É—Å–ª—É–≥—É'
                ),
                reply_markup=conditions_deal_markup(deal.id))

            await bot.send_message(
                chat_id=config.config('admin_group'),
                text=f"<b>üåÄ –°–¥–µ–ª–∫–∞:</b> #CG_{deal.id}\n\n"
                     f"<b>üíà –ü—Ä–æ–¥–∞–≤–µ—Ü:</b> @{seller.username} | "
                     f"<b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> @{buyer.username}\n"
                     f"<b>üí≥ –°—É–º–º–∞:</b> <code>{deal.amount}</code> RUB\n"
                     f"<b>üìù –£—Å–ª–æ–≤–∏—è:</b>\n <code>{deal.description}</code>\n"
                     f"<b>üßø –°—Ç–∞—Ç—É—Å:</b> –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞"
            )

            await call.message.delete()
        else:
            await call.message.answer(
                text='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!'
            )


@vip.callback_query_handler(text_startswith="conditions-deal:")
async def conditions_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    if deal.status == '–û–ø–ª–∞—á–µ–Ω–∞':
        buyer = await Users.get(user_id=deal.buyer_id)
        seller = await Users.get(user_id=deal.seller_id)

        await Deals.updateStatus(
            dl_id=call.data.split(":")[1],
            status="–§–∏–Ω–∞–ª"
        )

        await bot.send_message(
            chat_id=deal.buyer_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã' + "\n\n‚ÄºÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞\—É—Å–ª—É–≥–∏, "
                                             "–∞ –ø–æ—Ç–æ–º —É–∂–µ –æ—Ç–ø—É—Å–∫–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –ø—Ä–æ–¥–∞–≤—Ü—É!"
            ),
            reply_markup=finish_deal_markup(deal.id)
        )
        await bot.send_message(
            chat_id=deal.seller_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ó–∞–∫—Ä—ã—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è'
            ),
            reply_markup=finish_seller_markup(deal.id)
        )
        await call.message.delete()


@vip.callback_query_handler(text_startswith="finish-deal-sell:")
async def finish_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    if deal.status == '–§–∏–Ω–∞–ª':
        buyer = await Users.get(user_id=deal.buyer_id)
        seller = await Users.get(user_id=deal.seller_id)

        await Deals.updateStatus(
            dl_id=call.data.split(":")[1],
            status="–ó–∞–∫—Ä—ã—Ç–∞"
        )
        await Users.updateBalance(
            user_id=deal.seller_id,
            amount=deal.amount
        )
        await Users.updateCountDeals(
            user_id=deal.seller_id,
            count=1
        )
        await Users.updateCountDeals(
            user_id=deal.buyer_id,
            count=1
        )

        await bot.send_message(
            chat_id=config.config('group_id'),
            text=group_deal_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info='–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ'
            )
        )
        await bot.send_message(
            chat_id=deal.buyer_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ'
            )
        )
        await bot.send_message(
            chat_id=deal.seller_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status=f'–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {deal.amount} RUB'
            )
        )
        await bot.send_message(
            chat_id=deal.buyer_id,
            text=f'<b>–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ–± —Ä–∞–±–æ—Ç–µ @{seller.username}?</b>',
            reply_markup=view_markup(deal.seller_id)
        )
        await bot.send_message(
            chat_id=deal.buyer_id,
            text=f'<b>–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É @{seller.username}</b>',
            reply_markup=rating_markup(deal.seller_id)
        )
        await bot.send_message(
            chat_id=deal.seller_id,
            text=f'<b>–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É @{buyer.username}</b>',
            reply_markup=rating_markup(deal.buyer_id))

        await call.message.delete()


@vip.callback_query_handler(text_startswith="user-rating-")
async def rating_handler(call: CallbackQuery):
    status = call.data.split("-")[2].split(":")[0]
    user = await Users.get(user_id=call.data.split(":")[1])
    updater = await Users.get(user_id=call.from_user.id)
    await Users.updateRate(
        user_id=call.data.split(":")[1],
        rate=1 if status == "plus" else -1
    )
    await call.message.edit_text(
        text=f"<b>–£—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥: {1 if status == 'plus' else -1} –¥–ª—è @{user.username}</b>"
    )
    await bot.send_message(
        chat_id=call.data.split(":")[1],
        text=f"<b>@{updater.username} {'–ø–æ–≤—ã—Å–∏–ª' if status == 'plus' else '–ø–æ–Ω–∏–∑–∏–ª'} –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥!</b>"
    )


@vip.callback_query_handler(text_startswith="arbitration-deal:")
async def arbitration_deal_handler(call: CallbackQuery):
    deal = await Deals.get(id=call.data.split(":")[1])
    if deal.status == '–§–∏–Ω–∞–ª':
        buyer = await Users.get(user_id=deal.buyer_id)
        seller = await Users.get(user_id=deal.seller_id)
        await Deals.updateStatus(
            dl_id=call.data.split(":")[1],
            status="–ê—Ä–±–∏—Ç—Ä–∞–∂"
        )

        await bot.send_message(
            chat_id=config.config('group_id'),
            text=group_deal_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount, info='–ê—Ä–±–∏—Ç—Ä–∞–∂'
            )
        )
        await bot.send_message(
            chat_id=deal.buyer_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ê—Ä–±–∏—Ç—Ä–∞–∂'
            ),
            reply_markup=arbitrator_markup()
        )
        await bot.send_message(
            chat_id=deal.seller_id,
            text=deal_create_msg.format(
                id_deal=deal.id,
                seller=seller.username,
                buyer=buyer.username,
                amount=deal.amount,
                info=deal.description,
                status='–ê—Ä–±–∏—Ç—Ä–∞–∂'
            ),
            reply_markup=arbitrator_markup())

        await call.message.delete()
